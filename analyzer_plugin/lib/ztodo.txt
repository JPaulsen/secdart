Current state:
- A dummy error is reported to the Analyzer Server and it show it!
- The Analyzer Server crashes because we do not coordinate the security analysis properly.
    - References to libraries are not supported
    - We need to ensure our security analysis takes place only on well-typed dart programs

TODO:
- Find the way to the AnalyzerDriver recognizes the lattice annotations. I am thinking in two ways:
	- Adding the definitions of the annotations as a "built-in" source for the AnalyzerDriver (e.g. similar to what angular analyzer plugin does)
	- Creating a seperated package (that should not be analyzed) with the definitions for label annotations
- Incorporate the current state of the security analysis
    - ie. global functions + binary expression + if expression + local variable declaracion
- Design how to exclude some files from the analysis
    - e.g. test files
- Design how to recognize custom settings from the analysis_options.yaml file.
- Implements secdartanalyzer: a console application that uses the security analysis.
    
Next extensions:
- Extend the security analysis to object and classes
- Manage interaction with libraries
- Implement code transformer to insert necesary casts


Security Analysis front-end options:
- SecDart Pad
- Integration with Analysis Server
- Command line tool: secdartanalyzer